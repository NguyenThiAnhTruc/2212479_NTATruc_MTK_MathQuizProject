@startuml
package core {
  class Question
  class GameState { +streak():int +incStreak() +resetStreak() }
  class Timer
}

package strategy.question {
  interface QuestionStrategy { +Question next(Random,int) }
  class AdditionStrategy
  class MultiplicationStrategy
  class DivisionStrategy
  class MixWithCarryStrategy
  class RandomComposite
}

package strategy.score {
  interface ScoreStrategy { +int score(boolean,long,int,GameState) }
  class FixedScoreStrategy
  class SumScoreComposite
  class TimedBonusDecorator
  class StreakBonusDecorator
}

package strategy.difficulty {
  interface DifficultyStrategy { +int levelFor(GameState,int,int) }
  class StreakBasedDifficulty
}

core.Question <.. strategy.question.QuestionStrategy
strategy.question.QuestionStrategy <|.. AdditionStrategy
strategy.question.QuestionStrategy <|.. MultiplicationStrategy
strategy.question.QuestionStrategy <|.. DivisionStrategy
strategy.question.QuestionStrategy <|.. MixWithCarryStrategy
strategy.question.QuestionStrategy <|.. RandomComposite

strategy.score.ScoreStrategy <|.. FixedScoreStrategy
strategy.score.ScoreStrategy <|.. SumScoreComposite
strategy.score.ScoreStrategy <|.. TimedBonusDecorator
strategy.score.ScoreStrategy <|.. StreakBonusDecorator

strategy.difficulty.DifficultyStrategy <|.. StreakBasedDifficulty
@enduml
